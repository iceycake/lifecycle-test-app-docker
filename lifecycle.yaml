---
version: '0.0.3-alpha-1'

environment:
  defaultServices:
    - name: 'lifecycle-test-app-docker-1'
  # optionalServices:
  #   - name: 'lc-test-opt-1'
  #     repository: 'iceycake/lifecycle-test-app-optional-1'
  #     branch: 'main'
  webhooks:
    - state: 'deployed'
      type: 'codefresh'
      name: 'post deployed pipeline'
      pipelineId: 'andy-app-1/lifecycle-webhook-deployed'
      description: 'execute after service deployed successfully'
      trigger: 'lifecycle'
      env:
        SOURCE: 'yaml'
        COUNTER: '1'

services:
  - name: 'lifecycle-test-app-docker-1'
    requires:
      - name: 'lta-db'
    github:
      repository: 'iceycake/lifecycle-test-app-docker'
      branchName: 'main'
      docker:
        defaultTag: 'main'
        init:
          dockerfilePath: 'sysops/dockerfiles/init.dockerfile'
          env:
            COMPONENT: app
            ENV: lifecycle
            DB_HOST: '{{lta-db_internalHostname}}'
        app:
          dockerfilePath: 'sysops/dockerfiles/app.dockerfile'
          ports:
            - 8080
          env:
            ENV: lifecycle
            COMPONENT: app
            DB_HOST: "{{lta-db_internalHostname}}"
            BUILD_UUID: "{{buildUUID}}"        
      deployment:
        public: true
        capacityType: 'SPOT'
        network:
          grpc:
            enable: true
  - name: 'lta-db'
    docker:
      dockerImage: 'postgres'
      defaultTag: 'latest'
      ports:
        - 5432
      env:
        POSTGRES_USER: 'postgres_user'
        POSTGRES_PASSWORD: 'postgres'
        POSTGRES_DB: 'postgres_db'
        SERVICE: 'test-db'
        PGDATA: '/var/lib/postgresql/data/pgdata'
      deployment:
        public: false
        capacityType: 'ON_DEMAND'
        serviceDisks:
          - name: 'postgres-volume'
            mountPath: '/var/lib/postgresql/data'
            accessModes: 'ReadWriteOnce'
            storageSize: '5Gi'